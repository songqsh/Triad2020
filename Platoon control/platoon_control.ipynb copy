{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "platoon control.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "authorship_tag": "ABX9TyOsVzfo/61dU0J82cn1Fs4W",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/JiaminJIAN/Research/blob/master/Platoon%20control/platoon_control.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ih-xvuJC5PKi",
        "colab_type": "text"
      },
      "source": [
        "## **Platoon control**"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "-O0BdQBK5ebr",
        "colab_type": "text"
      },
      "source": [
        "### **Introduction**\n",
        "\n",
        "For $i = 0$, the state of the system governed by\n",
        "\n",
        "\\begin{cases}\n",
        "    d P_{0}(t) = V_{0}(t) \\, d t + \\sigma_{1} \\, d W_{1}(t) \\\\\n",
        "    d V_{0}(t) = u_{0}(t) \\, d t + \\sigma_{2} \\, d W_{2}(t)\n",
        "\\end{cases}\n",
        "\n",
        "where $W_{1}(t)$ and $W_{2}(t)$ are standard Brownian motions and they are independent of each other.\n",
        "\n",
        "Since we got the optimal control\n",
        "\n",
        "$$u_{0}^{*}(x, t) = - \\varphi (T - t) (x_{0,2} - \\nu),$$\n",
        "\n",
        "where \n",
        "\n",
        "$$\\varphi(t) = \\frac{e^{2t} - 1}{e^{2t} + 1}.$$\n",
        "\n",
        "By the Euler method, we devide the time interval $[0, T]$ into $N$ segments and set $h = \\frac{T}{N}$, then we have\n",
        "\n",
        "\\begin{cases}\n",
        "    P_{0}((i+1)h) = P_{0}(ih) + V_{0}(ih) h + \\sigma_{1} \\sqrt{h} Z_{i} \\\\\n",
        "    V_{0}((i+1)h) = V_{0}(ih) - \\varphi(T - ih) (V_{0}(ih) - \\nu) h + \\sigma_{2} \\sqrt{h} X_{i}\n",
        "\\end{cases}\n",
        "\n",
        "where $i = 0, 1, \\dots, N-1$ and ${X}_{i}, Z_{i}$ are independent standard normal variables."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "pww-rsLc5Lsv",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "from pylab import plt"
      ],
      "execution_count": 1,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "je5HWJTb-sYP",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "## Parameters\n",
        "\n",
        "P0_0 = 1       # the initial position of vehicle 0\n",
        "V0_0 = 20      # the initial velocity of vehicle 0\n",
        "nu = 70        # the value of \\nu\n",
        "sigma_1 = 1    # the defussion term 1\n",
        "sigma_2 = 1    # the defussion term 2\n",
        "T = 3          # terminal time\n",
        "N = 100        # nodes of time interval"
      ],
      "execution_count": 2,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "_2aIA_NvAEzj",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "## the function \\varphi(t)\n",
        "\n",
        "def varphi(t):\n",
        "  value = (np.exp(2*t) - 1) / (np.exp(2*t) + 1)\n",
        "  return value"
      ],
      "execution_count": 3,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "WU9DnPx3_LPu",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "## the position and velocity of vehicle 0 by the Euler method\n",
        "\n",
        "def path_n0(P0_0, V0_0, nu, sigma_1, sigma_2, T, N):\n",
        "    t = np.linspace(0, T, num = N+1)\n",
        "    h = T/N  \n",
        "    P0 = P0_0 + np.zeros(N+1)  \n",
        "    V0 = V0_0 + np.zeros(N+1)            \n",
        "    for i in range(N):\n",
        "        V0[i+1] = V0[i] - varphi(T-i*h) * (V0[i] - nu) * h + sigma_2 * np.sqrt(h) * np.random.normal()\n",
        "        P0[i+1] = P0[i] + V0[i] * h + sigma_1 * np.sqrt(h) * np.random.normal()\n",
        "    return t, V0, P0"
      ],
      "execution_count": 4,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ZUpte_TtDmDH",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 302
        },
        "outputId": "66923654-6da1-4c30-e345-ae8f8a7a3584"
      },
      "source": [
        "## the position of vehicle 0\n",
        "\n",
        "[t, V0, P0] = path_n0(P0_0, V0_0, nu, sigma_1, sigma_2, T, N)\n",
        "plt.plot(t,P0)"
      ],
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[<matplotlib.lines.Line2D at 0x7fd0793289e8>]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 5
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "YztLzM5IEGkM",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 302
        },
        "outputId": "076ba3dc-37da-4b1c-d22b-8d6a2b38175c"
      },
      "source": [
        "## the velocity of vehicle 0\n",
        "\n",
        "plt.plot(t,V0)"
      ],
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[<matplotlib.lines.Line2D at 0x7fd078e84a58>]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 6
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "6280kQ3IIf3w",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 302
        },
        "outputId": "215e92c7-a8ef-4f07-cff4-a1cae215f736"
      },
      "source": [
        "## the optimal control(acceleration) of vehicle 0\n",
        "\n",
        "u = - varphi(T-t) * (V0 - nu)\n",
        "plt.plot(t,u)"
      ],
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[<matplotlib.lines.Line2D at 0x7fd078e17ba8>]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 7
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "PMVZvy0ZKhu4",
        "colab_type": "text"
      },
      "source": [
        "When $N=1$, there are two vehicles in the platoon system. We suppose the optimal strategy of the second vehicle is \n",
        "\n",
        "$$u_{1}^{*} (x, t) = - \\varphi (T - t) (x_{1,2} - x_{0,2})$$\n",
        "\n",
        "Similarly, by the Euler method, we devide the time interval $[0, T]$ into $N$ segments and set $h = \\frac{T}{N}$, then we have\n",
        "\n",
        "\\begin{cases}\n",
        "    P_{1}((i+1)h) = P_{1}(ih) + V_{1}(ih) h + \\sigma_{1} \\sqrt{h} Z_{i} \\\\\n",
        "    V_{1}((i+1)h) = V_{1}(ih) - \\varphi(T - ih) (V_{1}(ih) - V_{0}(ih)) h + \\sigma_{2} \\sqrt{h} X_{i}\n",
        "\\end{cases}\n",
        "\n",
        "where $i = 0, 1, \\dots, N-1$ and ${X}_{i}, Z_{i}$ are independent standard normal variables."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Eu2tr-yTMAaH",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "## the position and velocity of vehicle 1 by the Euler method\n",
        "\n",
        "def path_n1(P1_0, V1_0, P0_0, V0_0, nu, sigma_1, sigma_2, T, N):\n",
        "    t = np.linspace(0, T, num = N+1)\n",
        "    h = T/N  \n",
        "    P1 = P1_0 + np.zeros(N+1)  \n",
        "    V1 = V1_0 + np.zeros(N+1)\n",
        "    [t, V0, P0] = path_n0(P0_0, V0_0, nu, sigma_1, sigma_2, T, N)            \n",
        "    for i in range(N):\n",
        "        V1[i+1] = V1[i] - varphi(T-i*h) * (V1[i] - V0[i]) * h + sigma_2 * np.sqrt(h) * np.random.normal()\n",
        "        P1[i+1] = P1[i] + V1[i] * h + sigma_1 * np.sqrt(h) * np.random.normal()\n",
        "    return t, V1, P1"
      ],
      "execution_count": 8,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "QwS6M65ZNGJv",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "## Parameters\n",
        "\n",
        "P1_0 = 0       # the initial position of vehicle 1\n",
        "V1_0 = 20      # the initial velocity of vehicle 1"
      ],
      "execution_count": 9,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "UnBXrZGZNVs7",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 302
        },
        "outputId": "2f10dace-fab8-4f26-9445-5fb808055b40"
      },
      "source": [
        "## the position of vehicle 0 and vehicle 1\n",
        "\n",
        "[t, V1, P1] = path_n1(P1_0, V1_0, P0_0, V0_0, nu, sigma_1, sigma_2, T, N)\n",
        "plt.plot(t,P1)\n",
        "plt.plot(t,P0)"
      ],
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[<matplotlib.lines.Line2D at 0x7fd078db1898>]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 10
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "PcKtaSyjNgZl",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 302
        },
        "outputId": "207b0ffc-057a-4610-b99c-ce1e199d4808"
      },
      "source": [
        "## the velocity of vehicle 0\n",
        "\n",
        "plt.plot(t,V1)"
      ],
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[<matplotlib.lines.Line2D at 0x7fd078d39588>]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 11
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "n47uTtZVOV34",
        "colab_type": "text"
      },
      "source": [
        ""
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "H3WVLycrOVLF",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "## the velocity matrix of M vehicles\n",
        "\n",
        "def velocity_matrix(v, nu, sigma_1, sigma_2, T, N, M):\n",
        "    t = np.linspace(0, T, num = N+1)\n",
        "    h = T/N\n",
        "    V = np.zeros([M, N+1])\n",
        "    V[:,0] = v  # initial velocity of M vehicles\n",
        "    for i in range(N):\n",
        "        V[0,i+1] = V[0,i] - varphi(T-i*h) * (V[0,i] - nu) * h + sigma_2 * np.sqrt(h) * np.random.normal()\n",
        "        for j in range(1, M):\n",
        "            V[j,i+1] = V[j,i] - varphi(T-i*h) * (V[j,i] - V[j-1,i]) * h + sigma_2 * np.sqrt(h) * np.random.normal()\n",
        "    return V"
      ],
      "execution_count": 12,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "lCYwCxWFaApw",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 253
        },
        "outputId": "49147b39-8d05-4b19-d4d3-448c4e350fdc"
      },
      "source": [
        "## Parameters\n",
        "\n",
        "M = 10\n",
        "v = np.zeros(M, order = 'F') + 20\n",
        "\n",
        "V = velocity_matrix(v, nu, sigma_1, sigma_2, T, N, M)\n",
        "\n",
        "print(V)"
      ],
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[[20.         21.44682476 22.90602955 ... 66.29557796 66.25504353\n",
            "  66.45994214]\n",
            " [20.         19.90981499 19.77511716 ... 53.52827555 53.5936896\n",
            "  53.65836499]\n",
            " [20.         19.76782572 19.50572599 ... 40.73059227 40.78142753\n",
            "  40.70458104]\n",
            " ...\n",
            " [20.         20.0649467  20.11015429 ... 21.46678289 21.84042638\n",
            "  22.14764592]\n",
            " [20.         20.12648328 20.15068755 ... 22.4436683  22.40185155\n",
            "  22.36499581]\n",
            " [20.         20.03140205 20.34811559 ... 22.22429907 22.43345626\n",
            "  22.5757547 ]]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "jLKqyeJNcxPC",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "## the position matrix of M vehicles\n",
        "\n",
        "def position_matrix(p, v, nu, sigma_1, sigma_2, T, N, M):\n",
        "    t = np.linspace(0, T, num = N+1)\n",
        "    h = T/N\n",
        "    V = velocity_matrix(v, nu, sigma_1, sigma_2, T, N, M)\n",
        "    P = np.zeros([M, N+1])\n",
        "    P[:,0] =p\n",
        "    for j in range(M):\n",
        "        for i in range(N):\n",
        "            P[j,i+1] = P[j,i] + V[j,i] * h + sigma_1 * np.sqrt(h) * np.random.normal()\n",
        "    return P"
      ],
      "execution_count": 14,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "BZobLl0E69i_",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 253
        },
        "outputId": "7380fd08-879e-4eaf-85c1-68e960bed629"
      },
      "source": [
        "## parameters\n",
        "\n",
        "p = np.arange(1, 0, -0.1)\n",
        "P = position_matrix(p, v, nu, sigma_1, sigma_2, T, N, M)\n",
        "print(P)"
      ],
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[[1.00000000e+00 1.41093058e+00 2.29824932e+00 ... 1.56838685e+02\n",
            "  1.58807672e+02 1.60815792e+02]\n",
            " [9.00000000e-01 1.73244072e+00 1.93735077e+00 ... 1.13065805e+02\n",
            "  1.14986544e+02 1.16258446e+02]\n",
            " [8.00000000e-01 1.25142234e+00 1.86604402e+00 ... 8.44418392e+01\n",
            "  8.57932901e+01 8.70278294e+01]\n",
            " ...\n",
            " [3.00000000e-01 9.82888712e-01 1.57284688e+00 ... 6.08077933e+01\n",
            "  6.12443949e+01 6.21260896e+01]\n",
            " [2.00000000e-01 9.51334022e-01 1.30797371e+00 ... 5.83108757e+01\n",
            "  5.87619553e+01 5.94636704e+01]\n",
            " [1.00000000e-01 7.09917544e-01 1.28247733e+00 ... 5.78452596e+01\n",
            "  5.85016620e+01 5.91995699e+01]]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "QrpDGB9U_pLC",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 286
        },
        "outputId": "b9ae5bb2-0ad7-4383-aa2d-fe07342fa164"
      },
      "source": [
        "## the position of M vehicles\n",
        "\n",
        "for i in range(10): \n",
        "    plt.plot(t,P[i])"
      ],
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    }
  ]
}